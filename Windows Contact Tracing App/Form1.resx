<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="WCTIcon.InitialImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        ZPkAAAAASUVORK5CYII=
</value>
  </data>
</root>